{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the key vault."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies the Azure location where the key vault should be created."
      }
    },
    "resourceTags": {
      "type": "object",
      "defaultValue": {}
    },
    "enabledForDeployment": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [true, false],
      "metadata": {
        "description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
      }
    },
    "enabledForDiskEncryption": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [true, false],
      "metadata": {
        "description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
      }
    },
    "enabledForTemplateDeployment": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [true, false],
      "metadata": {
        "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
      }
    },
    "enableSoftDelete": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [true, false]
    },
    "softDeleteRetentionInDays": {
      "type": "int",
      "minValue": 7,
      "maxValue": 90,
      "defaultValue": 7
    },
    "enableRbacAuthorization": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [true, false]
    },
    "enablePurgeProtection": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [true, false]
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "Specifies the Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Get it by using Get-AzSubscription cmdlet."
      }
    },

    "skuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": ["Standard", "Premium"],
      "metadata": {
        "description": "Specifies whether the key vault is a standard vault or a premium vault."
      }
    }
    // "accessPolicies": {
    //   "type": "object"
    // }
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2020-04-01-preview",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "enabledForDeployment": "[parameters('enabledForDeployment')]",
        "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
        "enableSoftDelete": "[parameters('enableSoftDelete')]",
        "softDeleteRetentionInDays": "[parameters('softDeleteRetentionInDays')]",
        "enableRbacAuthorization": "[parameters('enableRbacAuthorization')]",
        "enablePurgeProtection": "[parameters('enablePurgeProtection')]",
        "tenantId": "[parameters('tenantId')]",
        "accessPolicies": [], //"[parameters('accessPolicies')]",
        "sku": {
          "name": "[parameters('skuName')]",
          "family": "A"
        },
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    }
  ]
}
